Software design

The primary computer runs Gentoo, a Linux distribution, and runs the ROS software package to support the high-level behaviors. Each behavior or part of the system is implemented as a separate ROS node, and communicates with other nodes through messages or service calls.

As originally designed, the system was intended to have the following custom nodes:
* Hardware interface
* goal list/server
* gps/odometry kalman filter
* global map server
* localization
* active localization
* path planner
And the following stock nodes:
* gpsd_client
* laser driver

There wasn't enough time to implement all of these before the Sparkfun AVC, so a subset of these modules was implemented. In particular, there wasn't enough time to write the localization or active localization nodes, and problems with the path planner resulted in it being replaced by a reactive goal tracking algorithm.

TODO: finish this implementation and report on the results.
